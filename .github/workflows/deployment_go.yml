on:
  workflow_call:
    inputs:
      migration_runner:
        required: false
        type: string
      environment:
        required: true
        type: string
      ecr_repository:
        required: true
        type: string
      service_name:
        required: true
        type: string
      container_name:
        required: true
        type: string
      cluster_name:
        required: true
        type: string
      aws_region:
        required: true
        type: string
      aws_ssm_region:
        required: true
        type: string
      config_path:
        required: true
        type: string
      image_registry:
        required: true
        type: string
      image_meta:
        required: true
        type: string
    secrets:
      db_user:
        required: true
      db_password:
        required: true
      db_host:
        required: true
      db_name:
        required: true
      token_github:
        required: true

env:
  DB_USER: ${{ secrets.db_user }}
  DB_PASSWORD: ${{ secrets.db_password }}
  DB_HOST: ${{ secrets.db_host }}
  DB_NAME: ${{ secrets.db_name }}
  ENV: ${{ inputs.environment }}
  ECR_REPOSITORY: ${{ inputs.ecr_repository }}
  GIT_HUB_TOKEN: ${{ secrets.token_github }}
  SERVICE_NAME: ${{ inputs.service_name }}
  CONTAINER_NAME: ${{ inputs.container_name }}
  CLUSTER_NAME: ${{ inputs.cluster_name }}
  AWS_REGION: ${{ inputs.aws_region }}
  AWS_SSM_REGION: ${{ inputs.aws_ssm_region }}
  CONFIG_PATH: ${{ inputs.config_path }}

name: Deployment Go
jobs:
  migration:
    name: DB Migration and Seed
    runs-on: [self-hosted, migration-runner]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: DB Migration Status
        id: status_db_migration
        shell: bash
        run: |
          cd database/migrations
          goose mysql "$DB_USER:$DB_PASSWORD@tcp($DB_HOST:3306)/$DB_NAME?parseTime=true" status
          goose mysql "$DB_USER:$DB_PASSWORD@tcp($DB_HOST:3306)/$DB_NAME?parseTime=true" up

      # - name: DB Seeders Status
      #   id: status_db_seeder
      #   shell: bash
      #   run: |
      #     cd database/seeder
      #     goose mysql "$DB_USER:$DB_PASSWORD@tcp($DB_HOST:3306)/$DB_NAME?parseTime=true" status
      #     goose mysql "$DB_USER:$DB_PASSWORD@tcp($DB_HOST:3306)/$DB_NAME?parseTime=true" up

  build:
    name: Build Image
    needs: migration
    runs-on: [ self-hosted, eks-runner ]
    outputs:
      image_registry: ${{ steps.publish_image.outputs.image_registry }}
      image_meta: ${{ steps.vars.outputs.sha_short }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Declare Github commit hash
        id: vars
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Checkout ECR Publish GitHub Action Repo
        uses: actions/checkout@v2
        with:
          repository: qoala-engineering/ecr-publish-action
          token: ${{env.GIT_HUB_TOKEN}}
          path: .github/actions/ecr-publish-action

      - name: Build and Push Image
        uses: ./.github/actions/ecr-publish-action
        id: publish_image
        with:
          aws-region: ap-southeast-3
          ecr_name: ${{env.ECR_REPOSITORY}}
          role-to-assume: arn:aws:iam::733346176650:role/devops-ci-role
          ecr_cache_tag: latest-${{env.ENV}}
          build_args: |
            GITHUB_TOKEN=${{env.GIT_HUB_TOKEN}}
          custom_tags: |
            latest-${{env.ENV}}
            ${{ steps.vars.outputs.sha_short }}

  deploy:
    name: Deploy AWS
    needs: build
    runs-on: [ self-hosted, eks-runner ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout GitHub CodeDeploy Action Repo
        uses: actions/checkout@v2
        with:
          repository: qoala-engineering/aws-ecs-codedeploy-action
          token: ${{ env.GIT_HUB_TOKEN }}
          path: .github/actions/aws-ecs-codedeploy-action

      - name: Deploy ECS task definition
        uses: ./.github/actions/aws-ecs-codedeploy-action
        with:
          role_to_assume: arn:aws:iam::733346176650:role/devops-ci-role
          aws_region: ${{ env.AWS_REGION }}
          aws_ssm_region: ${{ env.AWS_SSM_REGION }}
          service_name: ${{ env.SERVICE_NAME }}
          ecr_registry: ${{ needs.build.outputs.image_registry }}
          ecr_repository: ${{ env.ECR_REPOSITORY }}
          image_tag: ${{ needs.build.outputs.image_meta }}
          container_name: ${{ env.CONTAINER_NAME }}
          environment: ${{ env.ENV }}
          config_path: ${{ env.CONFIG_PATH }}
          ecs_cluster: ${{ env.CLUSTER_NAME }}
          GITHUB_TOKEN: ${{ env.GIT_HUB_TOKEN }}