on:
  workflow_call:
    inputs:
      bu:
        required: true
        type: string
        description: 'business unit name'
      environment:
        required: true
        type: string
      service_name:
        required: true
        type: string
        description: 'service name, also will be used as ecr repo name'
      # aws_ssm_region:
      #   required: false
      #   type: string
      config_path:
        required: false
        type: string
        default: 'iac/service.config.yml'
    secrets:
      token_github:
        required: true

name: Deployment Pipeline
jobs:
  config: 
    name: Generate Config 
    runs-on: [ self-hosted, eks-runner ]
    outputs:
      environment: ${{ steps.config.outputs.environment }}
      eks_cluster: ${{ steps.config.outputs.eks_cluster }}
      namespace: ${{ steps.config.outputs.namespace }}
      build_role_arn: ${{ steps.config.outputs.build_role_arn }}
      deploy_role_arn: ${{ steps.config.outputs.deploy_role_arn }}
      aws_region: ${{ steps.config.outputs.aws_region }}
    steps:
      - name: Checkout Generate Config Action Repo
        uses: actions/checkout@v2
        with:
          repository: qoala-engineering/generate-config-action
          token: ${{ secrets.token_github }}
          path: .github/actions/generate-config-action
      
      - name: Generate Config
        uses: ./.github/actions/generate-config-action
        id: config
        with:
          bu: ${{ inputs.bu }}
          environment: ${{ inputs.environment }}

  db_migration:
    name: DB Migration
    needs: config
    runs-on: [ self-hosted, eks-runner ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ needs.config.outputs.ssm_role_arn }}
          role-duration-seconds: 3600
          aws-region: ${{ needs.config.outputs.aws_ssm_region }}
      
      - name: Checkout Goose Migration Action Repo
        if: inputs.lang == 'golang'
        uses: actions/checkout@v2
        with:
          repository: qoala-engineering/goose-migration-action
          token: ${{ secrets.token_github }}
          path: .github/actions/goose-migration-action

      - uses: ./.github/actions/goose-migration-action
        if: inputs.lang == 'golang'
        with:
          parameter_path: ${{ needs.config.outputs.ssm_path }} # /bu/environment/app/service_name/PARAM_NAME 
          db_name: DB_NAME
          db_host_key: DB_HOST
          db_user_key: DB_USERNAME
          db_password_key: DB_PASSWORD
          db_migration_path: database/migrations
      
      - name: Checkout Knex Migration Action Repo
        if: inputs.lang == 'nodejs'
        uses: actions/checkout@v2
        with:
          repository: qoala-engineering/knex-migration-action
          token: ${{ secrets.token_github }}
          path: .github/actions/knex-migration-action

      - uses: ./.github/actions/knex-migration-action
        if: inputs.lang == 'nodejs'
        with:
          db_name: DB_NAME
          db_host_key: ${{ needs.config.outputs.ssm_path }}/DB_HOST
          db_user_key: ${{ needs.config.outputs.ssm_path }}/DB_USERNAME
          db_password_key: ${{ needs.config.outputs.ssm_path }}/DB_PASSWORD
          with_seeder: ${{ inputs.with_seeder }}

  build:
    name: Build Image
    needs: config
    runs-on: [ self-hosted, eks-runner ]
    outputs:
      image_registry: ${{ steps.publish_image.outputs.image_registry }}
      image_tag: sha-${{ github.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout ECR Publish GitHub Action Repo
        uses: actions/checkout@v2
        with:
          repository: qoala-engineering/ecr-publish-action
          token: ${{ secrets.token_github }}
          path: .github/actions/ecr-publish-action

      - name: Build and Push Image
        uses: ./.github/actions/ecr-publish-action
        id: publish_image
        with:
          aws-region: ${{ needs.config.outputs.aws_region }}
          ecr_name: ${{ inputs.service_name }}
          role-to-assume: ${{ needs.config.outputs.build_role_arn }}
          ecr_cache_tag: latest-${{ needs.config.outputs.environment }}
          build_args: |
            GITHUB_TOKEN=${{ secrets.token_github }}
          custom_tags: |
            latest-${{ needs.config.outputs.environment }}
            sha-${{ github.sha }}

  deploy:
    name: Deploy Service
    needs: [ config, build ]
    runs-on: [self-hosted, eks-runner]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout GitHub Action Repo
        uses: actions/checkout@v2
        with:
          repository: qoala-engineering/setup-eks-helm-action
          token: ${{ secrets.token_github }}
          path: .github/actions/setup-eks-helm-action

      - uses: ./.github/actions/setup-eks-helm-action
        with:
          aws-region: ${{ needs.config.outputs.aws_region }}
          role-to-assume: ${{ needs.config.outputs.deploy_role_arn }}
          github-token: ${{ secrets.token_github }}
          cluster-name: ${{ needs.config.outputs.eks_cluster }}
      
      - name: Checkout SSM Injection
        uses: actions/checkout@v2
        with:
          repository: qoala-engineering/helm-values-ssm-injection
          token: ${{ secrets.token_github }}
          path: .github/actions/helm-values-ssm-injection

      - name: SSM Injection
        id: values
        uses: ./.github/actions/helm-values-ssm-injection
        with:
          image: ${{ needs.build.outputs.image_registry }}/${{ inputs.service_name }}:${{ needs.build.outputs.image_tag }}
          environment: ${{ needs.config.outputs.environment }}
          configPath: ${{ inputs.config_path }}
 
      - name: Deploy service
        shell: bash
        run: |
          helm upgrade --install --atomic --wait --namespace ${{ needs.config.outputs.namespace }} --create-namespace ${{ inputs.service_name }} .charts/charts/service -f ${{ steps.values.outputs.values }}
